// Generator G (as compressed curve point)
module.exports.COMPRESSED_GENERATOR_G = new Uint8Array([
  0x03,
  0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac,
  0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07,
  0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9,
  0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98
])

/** H is the alternate secp256k1 generator.
 *  Computed as the hash of the above G, DER-encoded with 0x04 (uncompressed pubkey) as its flag byte.
 *  Resources:
 *  https://github.com/garyyu/rust-secp256k1-zkp/blob/master/src/constants.rs#L98-L105
 *  https://github.com/garyyu/rust-secp256k1-zkp/wiki/Pedersen-Commitment
 */

// Generator H (as compressed curve point (3))
module.exports.COMPRESSED_GENERATOR_H = new Uint8Array([
  0x02,
  0x50, 0x92, 0x9b, 0x74, 0xc1, 0xa0, 0x49, 0x54,
  0xb7, 0x8b, 0x4b, 0x60, 0x35, 0xe9, 0x7a, 0x5e,
  0x07, 0x8a, 0x5a, 0x0f, 0x28, 0xec, 0x96, 0xd5,
  0x47, 0xbf, 0xee, 0x9a, 0xce, 0x80, 0x3a, 0xc0
])
